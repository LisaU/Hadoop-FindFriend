/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2017-07-07 02:42:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.preprocess;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class db2hdfs_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t<div style=\"padding-left: 30px;font-size: 20px;padding-top:10px;\">DB过滤到HDFS</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<div style=\"padding-left: 30px;font-size: 15px;padding-top:10px;\"><br>\r\n");
      out.write("\t\tDB过滤到HDFS处理包括：<br>\r\n");
      out.write("\t\t<ol>\r\n");
      out.write("\t\t\t<li>读取Mysql数据库UserData中的数据</li>\r\n");
      out.write("\t\t\t<li>过滤UserData中符合规则的数据</li>\r\n");
      out.write("\t\t\t<li>过滤规则 ：reputation>15,upVotes>0,downVotes>0,views>0</li>\r\n");
      out.write("\t\t\t<li>把符合规则的UserData数据序列化写入HDFS</li>\r\n");
      out.write("\t\t</ol>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<div style=\"padding-left: 30px;font-size: 20px;padding-top:10px;\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"name\">输出路径:</label>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t<td><input class=\"easyui-validatebox\" type=\"text\"\r\n");
      out.write("\t\t\t\t\tid=\"preprocess_output_id\" data-options=\"required:true\" style=\"width:300px\"\r\n");
      out.write("\t\t\t\t\tvalue=\"/user/root/_filter/preparevectors\" /></td>\r\n");
      out.write("\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><label for=\"name\">生成文件个数:</label>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t<td><input class=\"easyui-validatebox\" type=\"text\"\r\n");
      out.write("\t\t\t\t\tid=\"preprocess_record_id\" data-options=\"required:true\" style=\"width:300px\"\r\n");
      out.write("\t\t\t\t\tvalue=\"4\" /></td>\r\n");
      out.write("\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td></td>\r\n");
      out.write("\t\t\t\t<td><a id=\"preprocess_submit_id\" href=\"\" class=\"easyui-linkbutton\"\r\n");
      out.write("\t\t\t\t\tdata-options=\"iconCls:'icon-door_in'\">预处理</a></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"js/preprocess.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
